2. 

a) Det största antalet kanter som kan finnas i en graf med n stycken hörn då den inte är enkel är oändligt många eftersom vi hela tiden kan lägga till ytterligare kanter genom "self loopar" som går från en hörn tillbaka till samma hörn.

b) Om grafen istället är enkel fås det maximala antalet kanter som sum(1,2,...,n-1) då n>1  eftersom att varje nytt hörn kan ha en ny kant till alla de föregående (n-1) hörnen. Om n är ett är antalet kanter alltid noll.

c) Ett träd är en graf där alla hörn är sammankopplade genom exakt en väg. En graf med n hörn som är sammankopplad måste ha minst n-1 kanter men om det finns n kanter eller fler kommer det finnas hörn som förbinds på mer än ett sätt. Alltså kommer antalet kanter vara n-1. 

3.

a) Vi antar att grannarna till en nod besöks i nummerordning, dvs. att den med lägst nummer besöks först. Då ger DFS med start i hörn 1 besöksordningen 1,2,3,4,5,6

BFS med start i hörn 1 ger 1,2,5,3,4,6

b) Om det är förhållandevis få kanter i förhållande till hörn kommer närhetsmatrisen bli väldigt stor men innehålla för det mesta nollor. Detta kräver mycket minne trots att det inte lagras så mycket användbar information i matrisen då de flesta elementen är noll. Vid dessa tillfällen kan det istället vara bättre att använda en närhetslista som kräver mycket mindre i denna situation.

c) För grafer men många kanter i förhållande till hörn kommer tidskomplexiteten för en närhetslista närma sig den för en närhetsmatris och då vi har en full graf där alla hörn är sammanbundna med varandra kommer båda ha en tidskomplexitet som är kvadratisk, n^2.
